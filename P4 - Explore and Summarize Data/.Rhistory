while(year < 2017) {
url = paste0(base, toString(year), '.html')
team_table = '//*[@id="W_standings"]'
nba = url %>%
html() %>%
html_nodes(xpath=team_table) %>%
html_table()
nba = nba[[1]]
nba$year = year
all_seasons_west_records = bind_rows(nba,all_seasons_west_records)
year = year + 1 }
# Eastern Conference Records Table
base = 'http://www.basketball-reference.com/leagues/NBA_'
year = 1980
all_seasons_east_records = {}
while(year < 2017) {
url = paste0(base, toString(year), '.html')
team_table = '//*[@id="E_standings"]'
nba = url %>%
html() %>%
html_nodes(xpath=team_table) %>%
html_table()
nba = nba[[1]]
nba$year = year
all_seasons_east_records = bind_rows(nba,all_seasons_east_records)
year = year + 1 }
# Records Audit & Clean Up
# Western Conference
all_seasons_west_records$`Western Conference` =
str_replace_all(all_seasons_west_records$`Western Conference`,
"[(,),1,2,3,4,5,6,7,8,9,0,?]", "")
all_seasons_west_records$`Western Conference` =
str_trim(all_seasons_west_records$`Western Conference`,
side = c("both", "left", "right"))
all_seasons_west_records = filter(all_seasons_west_records,
`Western Conference` != "Midwest Division",
`Western Conference` != "Northwest Division",
`Western Conference` != "Pacific Division",
`Western Conference` != "Southwest Division")
all_seasons_west_records$Conference = "West"
all_seasons_west_records = rename(all_seasons_west_records, Team = `Western Conference`)
# Eastern Conference
all_seasons_east_records$`Eastern Conference` =
str_replace_all(all_seasons_east_records$`Eastern Conference`,
"[(,),1,2,3,4,5,6,7,8,9,0,?]", "")
all_seasons_east_records$`Eastern Conference` =
str_replace_all(all_seasons_east_records$`Eastern Conference`,
"Philadelphia ers", "Philadelphia 76ers")
all_seasons_east_records$`Eastern Conference` =
str_trim(all_seasons_east_records$`Eastern Conference`,
side = c("both", "left", "right"))
all_seasons_east_records = filter(all_seasons_east_records,
`Eastern Conference` != "Central Division",
`Eastern Conference` != "Atlantic Division",
`Eastern Conference` != "Southeast Division")
all_seasons_east_records$Conference = "East"
all_seasons_east_records = rename(all_seasons_east_records, Team = `Eastern Conference`)
# Team Table
base = 'http://www.basketball-reference.com/leagues/NBA_'
year = 1980
all_seasons_team = {}
while(year < 2017) {
url = paste0(base, toString(year), '.html')
team_table = '//*[@id="team"]'
nba = url %>%
html() %>%
html_nodes(xpath=team_table) %>%
html_table()
nba = nba[[1]]
nba$year = year
names(nba)[10] = "3P%"
names(nba)[13] = "2P%"
all_seasons_team = bind_rows(nba,all_seasons_team)
year = year + 1 }
# Opp Table
base = 'http://www.basketball-reference.com/leagues/NBA_'
year = 1980
all_seasons_opp = {}
while(year < 2017) {
url = paste0(base, toString(year), '.html')
opp_table = '//*[@id="opponent"]'
nba = url %>%
html() %>%
html_nodes(xpath=opp_table) %>%
html_table()
nba = nba[[1]]
nba$year = year
names(nba)[10] = "3P%"
names(nba)[13] = "2P%"
all_seasons_opp = bind_rows(nba,all_seasons_opp)
year = year + 1 }
# Team & Opp Audit & Clean Up
# Team
all_seasons_team = filter(all_seasons_team,
Team != "League Average")
# Opp
all_seasons_opp = filter(all_seasons_opp,
Team != "League Average")
all_seasons_opp = rename(all_seasons_opp, Opp_FG = FG, Opp_FGA = FGA, `Opp_FGA%` = `FG%`, `Opp_3P` = `3P`,
`Opp_3PA` = `3PA`, `Opp_3P%` = `3P%`, Opp_2P = `2P`, Opp_2PA = `2PA`, `Opp_2P%` = `2P%`,
Opp_FT = FT, Opp_FTA = FTA, `Opp_FT%` = `FT%`, Opp_ORB = ORB, Opp_DRB = DRB,
Opp_TRB = TRB, Opp_AST = AST, Opp_STL = STL, Opp_BLK = BLK, Opp_TOV = TOV,
Opp_PF = PF, Opp_PTS = PTS, `Opp_PTS/G` = `PTS/G`)
# Combining Tables
all_seasons_combined_records = bind_rows(all_seasons_east_records,all_seasons_west_records)
all_seasons_team_and_opp = merge(all_seasons_team, all_seasons_opp, by = c("Team", "year", "G", "MP"))
nba_data = merge(all_seasons_combined_records, all_seasons_team_and_opp, by = c("Team", "year"))
# Making Relevant Variables
# Made Playoffs
nba_data$MadePlayoffs = ifelse(str_detect(nba_data$Team, "[*]") == TRUE, "Yes", "No")
nba_data$Team = ifelse(str_detect(nba_data$Team, "[*]") == TRUE, substr(nba_data$Team,1,nchar(nba_data$Team)-1), nba_data$Team)
# Effective FG%
nba_data$EFG = (nba_data$FG + (0.5 * nba_data$`3P`)) / nba_data$FGA
# Opponents Eff FG%
nba_data$Opp_EFG = (nba_data$Opp_FG + (0.5 * nba_data$Opp_3P )) / nba_data$Opp_FGA
# Turnovers Committed / Possession
nba_data$TTP = nba_data$TOV / (nba_data$FG + nba_data$TOV +
(nba_data$FTA * .44))
# Turnovers Caused / Possession
nba_data$DTTP = nba_data$Opp_TOV / (nba_data$Opp_FG + nba_data$Opp_TOV +
(nba_data$Opp_FTA * .44))
# Offensive Rebound Rate
nba_data$ORebRate = nba_data$ORB / (nba_data$FGA - nba_data$FG)
# Defensive Rebound Rate
nba_data$DRebRate = nba_data$DRB / (nba_data$Opp_FGA - nba_data$Opp_FG)
# Free Throw Rate
nba_data$FTR = nba_data$FT / nba_data$FGA
# Opp Free Throw Rate
nba_data$OFTR = nba_data$Opp_FT / nba_data$Opp_FGA
# Consolidating NBA Data Table
nba_data = select(nba_data, Team, year, `W/L%`, Conference, MadePlayoffs, EFG, Opp_EFG, TTP,
DTTP, ORebRate, DRebRate, FTR, OFTR)
#Export Data to CSV
write.csv(nba_data, file = "nba_data.csv")
# Chunk 1
#install.packages("ggplot2", dependencies = T, repos = "http://cran.us.r-project.org")
#install.packages("knitr", dependencies = T, repos = "http://cran.us.r-project.org")
#install.packages("dplyr", dependencies = T, repos = "http://cran.us.r-project.org")
library(ggplot2)
library(dplyr)
library(corrplot)
library(memisc)
library(knitr)
# Chunk 2
# Load the Data
nba=read.csv("nba_data.csv")
nba$EFG_diff = nba$EFG - nba$Opp_EFG
nba$TTP_diff = nba$TTP - nba$DTTP
nba$RebRate_diff = nba$ORebRate - nba$DRebRate
nba$FTR_diff = nba$FTR - nba$OFTR
# Chunk 3
dim(nba)
names(nba)
str(nba)
levels(nba$Team)
levels(nba$MadePlayoffs)
levels(nba$Conference)
summary(nba)
# Chunk 4
ggplot(aes(x = `W.L.`), data = nba) +
geom_histogram(binwidth = .02)
ggplot(aes(x = `W.L.`), data = nba) +
geom_histogram(binwidth = .02) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02)
by(nba$`W.L.`, nba$MadePlayoffs, summary)
# Chunk 5
ggplot(aes(x = EFG), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$EFG)
ggplot(aes(x = EFG), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$EFG, nba$MadePlayoffs, summary)
# Chunk 6
ggplot(aes(x = Opp_EFG), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$Opp_EFG)
ggplot(aes(x = Opp_EFG), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$Opp_EFG, nba$MadePlayoffs, summary)
# Chunk 7
ggplot(aes(x = EFG_diff), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$EFG_diff)
ggplot(aes(x = EFG_diff), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$EFG_diff, nba$MadePlayoffs, summary)
# Chunk 8
ggplot(aes(x = TTP), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$TTP)
ggplot(aes(x = TTP), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$TTP, nba$MadePlayoffs, summary)
# Chunk 9
ggplot(aes(x = DTTP), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$DTTP)
ggplot(aes(x = DTTP), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$DTTP, nba$MadePlayoffs, summary)
# Chunk 10
ggplot(aes(x = TTP_diff), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$TTP_diff)
ggplot(aes(x = TTP_diff), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$TTP_diff, nba$MadePlayoffs, summary)
# Chunk 11
ggplot(aes(x = ORebRate), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$ORebRate)
ggplot(aes(x = ORebRate), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$ORebRate, nba$MadePlayoffs, summary)
# Chunk 12
ggplot(aes(x = DRebRate), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$DRebRate)
ggplot(aes(x = DRebRate), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$DRebRate, nba$MadePlayoffs, summary)
# Chunk 13
ggplot(aes(x = RebRate_diff), data = nba) +
geom_histogram(binwidth = .0025)
summary(nba$RebRate_diff)
ggplot(aes(x = RebRate_diff), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
by(nba$RebRate_diff, nba$MadePlayoffs, summary)
# Chunk 14
ggplot(aes(x = FTR), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$FTR)
ggplot(aes(x = FTR), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$FTR, nba$MadePlayoffs, summary)
# Chunk 15
ggplot(aes(x = OFTR), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$OFTR)
ggplot(aes(x = OFTR), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$OFTR, nba$MadePlayoffs, summary)
# Chunk 16
ggplot(aes(x = FTR_diff), data = nba) +
geom_histogram(binwidth = .005)
summary(nba$FTR_diff)
ggplot(aes(x = FTR_diff), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
by(nba$FTR_diff, nba$MadePlayoffs, summary)
# Chunk 17
nba_num = dplyr::select(nba, `W.L.`, EFG:FTR_diff)
corrplot(cor(nba_num), method = "number")
# Chunk 18
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
# Chunk 19
ggplot(aes(x = Opp_EFG, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = Opp_EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
# Chunk 20
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
# Chunk 21
ggplot(aes(x = TTP, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = TTP, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
# Chunk 22
ggplot(aes(x = TTP_diff, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = TTP_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
# Chunk 23
ggplot(aes(x = EFG, y = TTP), data = nba) +
geom_point()
ggplot(aes(x = EFG, y = TTP), data = nba) +
geom_point(aes(color = MadePlayoffs))
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(size = TTP), alpha = .25)
# Chunk 24
ggplot(aes(x = FTR, y = ORebRate), data = nba) +
geom_point()
ggplot(aes(x = FTR, y = ORebRate), data = nba) +
geom_point(aes(color = MadePlayoffs))
ggplot(aes(x = FTR, y = `W.L.`), data = nba) +
geom_point(aes(size = ORebRate), alpha = .25)
# Chunk 25
ggplot(aes(x = MadePlayoffs, y = `W.L.`), data = nba) +
geom_boxplot()
# Chunk 26
ggplot(aes(x = Conference, y = `W.L.`), data = nba) +
geom_boxplot()
# Chunk 27
m1 <- lm(`W.L.` ~ EFG_diff, data = nba)
m2 <- update(m1, ~ . + TTP_diff)
m3 <- update(m2, ~ . + RebRate_diff)
m4 <- update(m3, ~ . + FTR_diff)
mtable(m1, m2, m3, m4, sdigits = 2)
# Chunk 28
nba$hat_W.L. = predict(m4)
nba$prediction_error = nba$hat_W.L. - nba$`W.L.`
sum(abs(nba$prediction_error)) / length(nba$prediction_error)
# Chunk 29
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02) +
xlab('Winning %') +
ylab('Frequency') +
ggtitle('Histogram of Winning %, Broken out by Playoff & Non-Playoff Teams')
# Chunk 30
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs)) +
xlab("EFG Difference (Team vs Opp)") +
ylab('Winning %') +
ggtitle('EFG Difference vs Winning %')
# Chunk 31
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(size = TTP), alpha = .25) +
xlab('Effective Field Goal %') +
ylab('Winning %') +
ggtitle('EFG vs Winning %, w/ TTP Factored Out')
ggplot(aes(x = FTR_diff, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = FTR_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
cor(`W.L.`, EFG)
nba=read.csv("nba_data.csv")
dim(nba)
cor(nba$`W.L.`, nba$EFG)
cor(nba$TTP, nba$EFG)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02)
library(ggplot2)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge')
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge', alpha = .5)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge', alpha = .75)
by(nba$EFG, nba$MadePlayoffs, summary)
ggplot(aes(x = EFG,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge', alpha = .75)
ggplot(aes(x = EFG,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = RebRate_diff,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .0025, position = 'dodge', alpha = .75)
ggplot(aes(x = RebRate_diff), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = RebRate_diff), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = RebRate_diff,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = DRebRate), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = DRebRate,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = DRebRate), data = nba) +
geom_histogram(binwidth = .005) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = ORebRate,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = ORebRate), data = nba) +
geom_histogram(binwidth = .005)
ggplot(aes(x = TTP_diff,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = TTP_diff), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = DTTP,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .005, position = 'dodge', alpha = .75)
ggplot(aes(x = DTTP), data = nba) +
geom_histogram(binwidth = .0025) +
facet_wrap(~MadePlayoffs)
ggplot(aes(x = DTTP,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .0025, position = 'dodge', alpha = .75)
corrplot.mixed(cor(nba_num))
library(corrplot)
corrplot.mixed(cor(nba_num))
?corrplot
corrplot.mixed(cor(nba_num), bg = "grey")
corrplot.mixed(cor(nba_num), bg = "gray")
corrplot.mixed(cor(nba_num), bg = "gray")
corrplot.mixed(cor(nba_num), bg = "gold2")
?corrplot.mixed
corrplot(cor(nba_num), bg = "gold2")
corrplot(cor(nba_num), bg = "gold2", method = "number")
corrplot(cor(nba_num), bg = "gray2", method = "number")
corrplot(cor(nba_num), bg = "gray1", method = "number")
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(alpha = .75)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(alpha = .5)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(alpha = .25)
ggplot(aes(x = Opp_EFG, y = `W.L.`), data = nba) +
geom_point()
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point(alpha = .25)
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point(alpha = .5)
ggplot(aes(x = FTR, y = ORebRate), data = nba) +
geom_point(alpha = .25)
ggplot(aes(x = EFG, y = TTP), data = nba) +
geom_point(alpha = .25)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs))
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .5)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25)
ggplot(aes(x = FTR, y = `W.L.`), data = nba) +
geom_point(aes(size = ORebRate), alpha = .25)
ggplot(aes(x = FTR, y = ORebRate), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25)
ggplot(aes(x = FTR, y = `W.L.`), data = nba) +
geom_point(aes(color = ORebRate), alpha = .25)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = TTP), alpha = .25)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = TTP), alpha = .5)
ggplot(aes(x = FTR, y = `W.L.`), data = nba) +
geom_point(aes(color = ORebRate), alpha = .25)
ggplot(aes(x = FTR, y = `W.L.`), data = nba) +
geom_point(aes(color = ORebRate), alpha = .5)
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(alpha = .25) +
geom_smooth()
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(alpha = .25) +
stat_smooth(method="lm", se=FALSE)
ggplot(aes(x = FTR, y = ORebRate), data = nba) +
geom_point(alpha = .25) +
stat_smooth(method="lm", se=FALSE)
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point(alpha = .5) +
stat_smooth(method="lm", se=FALSE)
cor(nba$`W.L.`, nba$RebRate_diff)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02) +
xlab('Winning %') +
ylab('Frequency') +
ggtitle('Histogram of Winning %, Broken out by Playoff & Non-Playoff Teams')
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge', alpha = .75)
ggplot(aes(x = `W.L.`,fill = MadePlayoffs), data = nba) +
geom_histogram(binwidth = .02, position = 'dodge', alpha = .75) +
xlab('Winning %') +
ylab('Frequency') +
ggtitle('Histogram of Winning %, Broken out by Playoff & Non-Playoff Teams')
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs)) +
xlab("EFG Difference (Team vs Opp)") +
ylab('Winning %') +
ggtitle('EFG Difference vs Winning %')
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25) +
geom_smooth(aes(group = MadePlayoffs), method="lm")
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs)) +
xlab("EFG Difference (Team vs Opp)") +
ylab('Winning %') +
ggtitle('EFG Difference vs Winning %')
ggplot(aes(x = EFG_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25) +
geom_smooth(aes(group = MadePlayoffs), method="lm") +
xlab("EFG Difference (Team vs Opp)") +
ylab('Winning %') +
ggtitle('EFG Difference vs Winning %')
ggplot(aes(x = RebRate_diff, y = `W.L.`), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25) +
geom_smooth(aes(group = MadePlayoffs), method="lm")
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(size = TTP), alpha = .25) +
xlab('Effective Field Goal %') +
ylab('Winning %') +
ggtitle('EFG vs Winning %, w/ TTP Factored Out')
ggplot(aes(x = EFG, y = TTP), data = nba) +
geom_point(aes(color = MadePlayoffs), alpha = .25) +
geom_smooth(aes(group = MadePlayoffs), method="lm")
ggplot(aes(x = EFG, y = `W.L.`), data = nba) +
geom_point(aes(color = TTP), alpha = .5)
