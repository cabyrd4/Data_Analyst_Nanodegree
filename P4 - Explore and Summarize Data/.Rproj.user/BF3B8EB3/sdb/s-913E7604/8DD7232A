{
    "collab_server" : "",
    "contents" : "install.packages(\"rvest\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"pipeR\")\ninstall.packages(\"stringr\")\ninstall.packages(\"ggplot2\")\n\nlibrary(rvest)\nlibrary(dplyr)\nlibrary(pipeR)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(reshape2)\n\n# Western Conference Records Table\nbase = 'http://www.basketball-reference.com/leagues/NBA_'\nyear = 2013\nall_seasons_west_records = {}\n\nwhile(year < 2017) {\n  url = paste0(base, toString(year), '.html')\n  team_table = '//*[@id=\"W_standings\"]'\n  \n  nba = url %>%\n    html() %>%\n    html_nodes(xpath=team_table) %>%\n    html_table()\n  nba = nba[[1]]\n  \n  nba$year = year\n  \n  all_seasons_west_records = bind_rows(nba,all_seasons_west_records)\n  year = year + 1 }\n\n# Eastern Conference Records Table\nbase = 'http://www.basketball-reference.com/leagues/NBA_'\nyear = 2013\nall_seasons_east_records = {}\n\nwhile(year < 2017) {\n  url = paste0(base, toString(year), '.html')\n  team_table = '//*[@id=\"E_standings\"]'\n  \n  nba = url %>%\n    html() %>%\n    html_nodes(xpath=team_table) %>%\n    html_table()\n  nba = nba[[1]]\n  \n  nba$year = year\n  \n  all_seasons_east_records = bind_rows(nba,all_seasons_east_records)\n  year = year + 1 }\n\n# Records Audit & Clean Up\n# Western Conference\nall_seasons_west_records$`Western Conference` = \n  str_replace_all(all_seasons_west_records$`Western Conference`, \n    \"[(,),1,2,3,4,5,6,7,8,9,0,?]\", \"\")\n\nall_seasons_west_records$`Western Conference` =\n  str_trim(all_seasons_west_records$`Western Conference`, \n    side = c(\"both\", \"left\", \"right\"))\n\nall_seasons_west_records = filter(all_seasons_west_records, \n  `Western Conference` != \"Midwest Division\",\n  `Western Conference` != \"Northwest Division\",\n  `Western Conference` != \"Pacific Division\",\n  `Western Conference` != \"Southwest Division\")\n\nall_seasons_west_records$Conference = \"West\"\nall_seasons_west_records = rename(all_seasons_west_records, Team = `Western Conference`)\n\n# Eastern Conference\nall_seasons_east_records$`Eastern Conference` = \n  str_replace_all(all_seasons_east_records$`Eastern Conference`, \n                  \"[(,),1,2,3,4,5,6,7,8,9,0,?]\", \"\")\n\nall_seasons_east_records$`Eastern Conference` = \n  str_replace_all(all_seasons_east_records$`Eastern Conference`, \n                  \"Philadelphia ers\", \"Philadelphia 76ers\")\n\nall_seasons_east_records$`Eastern Conference` =\n  str_trim(all_seasons_east_records$`Eastern Conference`, \n           side = c(\"both\", \"left\", \"right\"))\n\nall_seasons_east_records = filter(all_seasons_east_records, \n                                  `Eastern Conference` != \"Central Division\",\n                                  `Eastern Conference` != \"Atlantic Division\",\n                                  `Eastern Conference` != \"Southeast Division\")\n\nall_seasons_east_records$Conference = \"East\"\nall_seasons_east_records = rename(all_seasons_east_records, Team = `Eastern Conference`)\n\n# Team Table\nbase = 'http://www.basketball-reference.com/leagues/NBA_'\nyear = 2013\nall_seasons_team = {}\n\nwhile(year < 2017) {\nurl = paste0(base, toString(year), '.html')\nteam_table = '//*[@id=\"team\"]'\n\nnba = url %>%\n  html() %>%\n  html_nodes(xpath=team_table) %>%\n  html_table()\nnba = nba[[1]]\n\nnba$year = year\nnames(nba)[10] = \"3P%\"\nnames(nba)[13] = \"2P%\"\n\nall_seasons_team = bind_rows(nba,all_seasons_team)\nyear = year + 1 }\n\n# Opp Table\nbase = 'http://www.basketball-reference.com/leagues/NBA_'\nyear = 2013\nall_seasons_opp = {}\n\nwhile(year < 2017) {\nurl = paste0(base, toString(year), '.html')\nopp_table = '//*[@id=\"opponent\"]'\n  \nnba = url %>%\n  html() %>%\n  html_nodes(xpath=opp_table) %>%\n  html_table()\nnba = nba[[1]]\n  \nnba$year = year\nnames(nba)[10] = \"3P%\"\nnames(nba)[13] = \"2P%\"\n  \nall_seasons_opp = bind_rows(nba,all_seasons_opp)\nyear = year + 1 }\n\n# Team & Opp Audit & Clean Up\n# Team\nall_seasons_team = filter(all_seasons_team, \n                                  Team != \"League Average\")\n\n# Opp\nall_seasons_opp = filter(all_seasons_opp, \n                          Team != \"League Average\")\n\nall_seasons_opp = rename(all_seasons_opp, Opp_FG = FG, Opp_FGA = FGA, `Opp_FGA%` = `FG%`, `Opp_3P` = `3P`,\n       `Opp_3PA` = `3PA`, `Opp_3P%` = `3P%`, Opp_2P = `2P`, Opp_2PA = `2PA`, `Opp_2P%` = `2P%`,\n       Opp_FT = FT, Opp_FTA = FTA, `Opp_FT%` = `FT%`, Opp_ORB = ORB, Opp_DRB = DRB, \n       Opp_TRB = TRB, Opp_AST = AST, Opp_STL = STL, Opp_BLK = BLK, Opp_TOV = TOV, \n       Opp_PF = PF, Opp_PTS = PTS, `Opp_PTS/G` = `PTS/G`)\n\n# Combining Tables\nall_seasons_combined_records = bind_rows(all_seasons_east_records,all_seasons_west_records)\n\nall_seasons_team_and_opp = merge(all_seasons_team, all_seasons_opp, by = c(\"Team\", \"year\", \"G\", \"MP\"))\n\nnba_data = merge(all_seasons_combined_records, all_seasons_team_and_opp, by = c(\"Team\", \"year\"))\n\n# Making Relevant Variables\n\n# Fix Small Issues\nnba_data$Team = ifelse(str_detect(nba_data$Team, \"[*]\") == TRUE, substr(nba_data$Team,1,nchar(nba_data$Team)-1), nba_data$Team)\nnba_data$Team = ifelse(str_detect(nba_data$Team, \"Charlotte Bobcats\") == TRUE, \"Charlotte Hornets\", nba_data$Team)\nnba_data$Team = ifelse(str_detect(nba_data$Team, \"New Orleans Hornets\") == TRUE, \"New Orleans Pelicans\", nba_data$Team)\nnba_data$W = as.numeric(nba_data$W)\nnba_data$L = as.numeric(nba_data$L)\n\n# Year Grouping\nnba_data$year_group = \"2013-2014\"\nnba_data$year_group[nba_data$year > 2014] = \"2015-2016\"\n\nsummary(nba_data)\n\n# Grouping Data\nnba_data_by_year_group_team = nba_data %>%\n  group_by(year_group, Team) %>%\n  summarise(\n    W = sum(W),\n    L = sum(L),\n    FG = sum(FG),\n    `3P` = sum(`3P`),\n    FGA = sum(FGA),\n    Opp_FG = sum(Opp_FG),\n    Opp_3P = sum(Opp_3P),\n    Opp_FGA = sum(Opp_FGA),\n    TOV = sum(TOV),\n    Opp_TOV = sum(Opp_TOV),\n    ORB = sum(ORB),\n    DRB = sum(DRB),\n    FT = sum(FT),\n    FTA = sum(FTA),\n    Opp_FT = sum(Opp_FT),\n    Opp_FTA = sum(Opp_FTA)\n    )\n\n# WL%\nnba_data_by_year_group_team$`W/L%` = nba_data_by_year_group_team$W /\n  (nba_data_by_year_group_team$W + nba_data_by_year_group_team$L)\n\n# Effective FG%\nnba_data_by_year_group_team$EFG = (nba_data_by_year_group_team$FG + (0.5 * nba_data_by_year_group_team$`3P`)) / nba_data_by_year_group_team$FGA\n\n# Opponents Eff FG%\nnba_data_by_year_group_team$Opp_EFG = (nba_data_by_year_group_team$Opp_FG + (0.5 * nba_data_by_year_group_team$Opp_3P )) / nba_data_by_year_group_team$Opp_FGA\n\n# Turnovers Committed / Possession\nnba_data_by_year_group_team$TTP = nba_data_by_year_group_team$TOV / (nba_data_by_year_group_team$FG + nba_data_by_year_group_team$TOV + \n                      (nba_data_by_year_group_team$FTA * .44))\n\n# Turnovers Caused / Possession\nnba_data_by_year_group_team$DTTP = nba_data_by_year_group_team$Opp_TOV / (nba_data_by_year_group_team$Opp_FG + nba_data_by_year_group_team$Opp_TOV + \n                      (nba_data_by_year_group_team$Opp_FTA * .44))\n\n# Offensive Rebound Rate\nnba_data_by_year_group_team$ORebRate = nba_data_by_year_group_team$ORB / (nba_data_by_year_group_team$FGA - nba_data_by_year_group_team$FG)\n\n# Defensive Rebound Rate\nnba_data_by_year_group_team$DRebRate = nba_data_by_year_group_team$DRB / (nba_data_by_year_group_team$Opp_FGA - nba_data_by_year_group_team$Opp_FG)\n\n# Free Throw Rate\nnba_data_by_year_group_team$FTR = nba_data_by_year_group_team$FT / nba_data_by_year_group_team$FGA\n\n# Opp Free Throw Rate\nnba_data_by_year_group_team$OFTR = nba_data_by_year_group_team$Opp_FT / nba_data_by_year_group_team$Opp_FGA\n\n# Diff Variables\nnba_data_by_year_group_team$EFG_diff = nba_data_by_year_group_team$EFG - nba_data_by_year_group_team$Opp_EFG\nnba_data_by_year_group_team$TTP_diff = nba_data_by_year_group_team$TTP - nba_data_by_year_group_team$DTTP\nnba_data_by_year_group_team$RebRate_diff = nba_data_by_year_group_team$ORebRate - nba_data_by_year_group_team$DRebRate\nnba_data_by_year_group_team$FTR_diff = nba_data_by_year_group_team$FTR - nba_data_by_year_group_team$OFTR\n\n# Consolidating NBA Data Table\nnba_data_by_year_group_team = select(nba_data_by_year_group_team, Team, year_group, `W/L%`, EFG, Opp_EFG, TTP, \n                 DTTP, ORebRate, DRebRate, FTR, OFTR, EFG_diff, TTP_diff, RebRate_diff, FTR_diff)\n\n# Reshaping Tables\nnba_data_win_percent = select(nba_data_by_year_group_team, Team, year_group, `W/L%`)\nnba_data_win_percent = dcast(nba_data_win_percent, Team ~ year_group)\n\nnba_data_efg_diff = select(nba_data_by_year_group_team, Team, year_group, EFG_diff)\nnba_data_efg_diff = dcast(nba_data_efg_diff, Team ~ year_group)\n\nnba_data_ttp_diff = select(nba_data_by_year_group_team, Team, year_group, TTP_diff)\nnba_data_ttp_diff = dcast(nba_data_ttp_diff, Team ~ year_group)\n\nnba_data_rebrate_diff = select(nba_data_by_year_group_team, Team, year_group, RebRate_diff)\nnba_data_rebrate_diff = dcast(nba_data_rebrate_diff, Team ~ year_group)\n\nnba_data_ftr_diff = select(nba_data_by_year_group_team, Team, year_group, FTR_diff)\nnba_data_ftr_diff = dcast(nba_data_ftr_diff, Team ~ year_group)\n\n#Export Data to CSV\nwrite.csv(nba_data_win_percent, file = \"nba_data_win_percent.csv\")\nwrite.csv(nba_data_efg_diff, file = \"nba_data_efg_diff.csv\")\nwrite.csv(nba_data_ttp_diff, file = \"nba_data_ttp_diff.csv\")\nwrite.csv(nba_data_rebrate_diff, file = \"nba_data_rebrate_diff.csv\")\nwrite.csv(nba_data_ftr_diff, file = \"nba_data_ftr_diff.csv\")\n\n",
    "created" : 1467244102154.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1972182037",
    "id" : "8DD7232A",
    "lastKnownWriteTime" : 1467292552,
    "last_content_update" : 1467292552,
    "path" : "~/Google Drive/Udacity/Data Analyst ND/Data-Analyst-ND/P6/Basketball Reference v3.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}